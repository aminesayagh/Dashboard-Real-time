
services:
  mongo:
    image: mongo:7.0.3
    container_name: realtime_dash_mongo
    restart: unless-stopped
    volumes: 
      - ./data/mongo_data:/data/db # Persist data across container restarts, mongo_data is the volume name on the host machine, /data/db is the path in the container
      - ./scripts:${SCRIPT_INTERNAL_DIR} # Mount scripts directory to the container
    networks:
      - realtime_dash_network
    env_file:
      - ${NODE_ENV}.env
    healthcheck:
      test: ['CMD-SHELL', '${SCRIPT_INTERNAL_DIR}/healthcheck-mongo.sh']
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7.0.0
    container_name: realtime_dash_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - ./data/redis_data:/data
      - ./scripts:${SCRIPT_INTERNAL_DIR}
    networks:
      - realtime_dash_network
    env_file:
      - ${NODE_ENV}.env
    healthcheck:
      test: ['CMD-SHELL', '${SCRIPT_INTERNAL_DIR}/healthcheck-redis.sh']
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  api: 
    build: ${APPLICATION_SERVICE_FOLDER}/api # Build the image from the Dockerfile in the api directory
    container_name: realtime_dash_api
    restart: unless-stopped
    ports:
      - "${API_PORT}:3001"
    volumes:
      - ${APPLICATION_SERVICE_FOLDER}/api:/usr/src/app # Mount application code
      - ./scripts:${SCRIPT_INTERNAL_DIR}/scripts
    networks:
      - realtime_dash_network
    env_file:
      - ${NODE_ENV}.env
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', '${SCRIPT_INTERNAL_DIR}/healthcheck-api.sh']
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  dash:
    build: ${APPLICATION_SERVICE_FOLDER}/dash
    container_name: realtime_dash_dash
    restart: unless-stopped
    ports:
      - "${DASH_PORT}:3000"
    volumes:
      - ./apps/dash:/usr/src/app
    networks:
      - realtime_dash_network
    env_file:
      - ${NODE_ENV}.env
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', '${SCRIPT_INTERNAL_DIR}/healthcheck-dash.sh']
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  realtime_dash_network:
    driver: bridge
  
volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local